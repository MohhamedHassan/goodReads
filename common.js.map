{"version":3,"sources":["./src/app/services/book.service.ts","./src/app/shared/text.pipe.ts","./src/app/shared/shared.module.ts","./src/app/shared/search.pipe.ts","./src/app/guards/not-user.guard.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ElementRef, Injectable, ViewChild } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Book } from '../interfaces/book';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n\n  constructor(private http:HttpClient) { }\n  addBook(value:any) {\n  \n    return this.http.post(`${environment.apiUrl}add-book`,value)\n  }\n  getAllBooks() {\n\n    return this.http.get(`${environment.apiUrl}all-books`)\n  }\n  getUserBooks() {\n\n    return this.http.get(`${environment.apiUrl}my-books`)\n  }\n  getBookById(id:any) {\n\n    return this.http.get(`${environment.apiUrl}single-book/${id}`)\n  }\n\n  updateBook(id:any,value:any) {\n\n    return this.http.patch(`${environment.apiUrl}update-book/${id}`,value)\n  }\n  updateBookImage(id:any,value:any) {\n\n    return this.http.post(`${environment.apiUrl}book-image/${id}`,value)\n  }\n  deleteBook(id:any) {\n\n    return this.http.delete(`${environment.apiUrl}delete-book/${id}`)\n  }\n  rateBook(id:any,rat:any) {\n let body = {\n   rating:rat\n }\n    return this.http.post(`${environment.apiUrl}rate-book/${id}`,body)\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'text'\n})\nexport class TextPipe implements PipeTransform {\n\n  transform(des:string): any {\n    return des.slice(0,150)\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextPipe } from './text.pipe';\nimport { SearchPipe } from './search.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    TextPipe,\n    SearchPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports:[TextPipe,SearchPipe]\n})\nexport class SharedModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(books:any,value:string): any {\n      if(!value) return books\n      return books.filter((item:any) => {\n        return item.name.toLowerCase().includes(value.toLowerCase())\n      })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotUserGuard implements CanActivate {\n  constructor(private auth:AuthService,private router:Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if (this.auth.isLogin()) return true\n      else {\n        this.router.navigate(['/auth/login'])\n        return false\n      }\n  }\n  \n}\n"],"sourceRoot":"webpack:///"}