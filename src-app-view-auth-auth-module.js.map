{"version":3,"sources":["./src/app/guards/user.guard.ts","./src/app/view/auth/auth.module.ts","./src/app/view/auth/auth-routing.module.ts","./src/app/view/auth/sign-up/sign-up.component.ts","./src/app/view/auth/sign-up/sign-up.component.html","./src/app/view/auth/login/login.component.ts","./src/app/view/auth/login/login.component.html"],"names":[],"mappings":"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","file":"src-app-view-auth-auth-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuard implements CanActivate {\n  constructor(private auth:AuthService,private router:Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n   if (this.auth.isLogin()) {\n   this.router.navigate(['/allBooks'])\n    return false\n   }\n   else return true\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    SignUpComponent,\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule\n  ]\n})\nexport class AuthModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UserGuard } from 'src/app/guards/user.guard';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    component:LoginComponent,\n    canActivate:[UserGuard]\n  },\n  {\n    path:'login',\n    component:LoginComponent,\n    canActivate:[UserGuard]\n  },\n  {\n    path:'signup',\n    component:SignUpComponent,\n    canActivate:[UserGuard]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { formatDate } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { User } from 'src/app/interfaces/user';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit , OnDestroy {\ncreateAccoutForm:FormGroup|any\ncreateAccountError:string|any=\"\"\nimage:any\nloading:any=false\nsignupSub:Subscription|any\n  constructor(private fb:FormBuilder,\n    private authservice:AuthService,\n    private router:Router,\n    private title:Title) {\n      title.setTitle(\"Sign Up\")\n     this.createAccoutForm = this.fb.group({\n        name:['',[Validators.required,Validators.minLength(4)]],\n        email:['',[Validators.email,Validators.required]],\n        password:['',[Validators.required,Validators.minLength(6)]],\n        profilePhoto:''\n     })\n   }\n\n  ngOnInit(): void {\n  }\n  get getName() {\n    return this.createAccoutForm.get('name')\n  }\n  get getEmail() {\n    return this.createAccoutForm.get('email')\n  }\n  get getPassword() {\n    return this.createAccoutForm.get('password')\n  }\n signUp(value:User) {\n   this.loading=true\nthis.signupSub =    this.authservice.signUp(value).subscribe((res:any) => {\n     this.createAccountError=\"\"\n     this.loading=false\n      localStorage.setItem('goodreadsToken',res.token)\n      this.router.navigate(['profile/myBooks'])\n\n     console.log(res)\n   }, err => {\n     this.loading=false\n       this.createAccountError = err.error.error || err.error.errors \n       console.log(err)\n   })\n } \n ngOnDestroy() {\n   if( this.signupSub) {\n       this.signupSub.unsubscribe()\n   }\n\n }\n}\n","\n\n<div class=\"register d-flex justify-content-center align-items-center mb-5\" style=\"color: black !important;\">\n    <div class=\"widthh my-5 bg-white p-3 text-center\" style=\"border-radius: 15px;\">\n        <img src=\"assets/signup.PNG\" alt=\"\" class=\"w-100\">\n   <div class=\"borderAround\">\n    <h3>Sign up for Goodreads</h3>\n    <form [formGroup]=\"createAccoutForm\" (ngSubmit)=\"signUp(createAccoutForm.value)\">\n        <div class=\"form-group text-left\">\n            <input placeholder=\"Name\" formControlName=\"name\" type=\"text\" class=\"form-control\">\n            <ng-container *ngIf=\"getName.touched\">\n                <p class=\"text-danger my-2\">\n                    <ng-container *ngIf=\"getName.errors?.required\">Name is requred</ng-container>\n                    <ng-container *ngIf=\"getName.errors?.minlength\">min length 4</ng-container>\n                </p>\n            </ng-container>\n\n\n        </div>\n        <div class=\"form-group text-left\">\n            <input placeholder=\"Email\" formControlName=\"email\" type=\"email\" class=\"form-control\">\n            <ng-container *ngIf=\"getEmail.touched\">\n                <p class=\"text-danger my-2\">\n                    <ng-container *ngIf=\"getEmail.errors?.required\">Email is requred</ng-container>\n                    <ng-container *ngIf=\"getEmail.errors?.email\">enter a valid email</ng-container>\n                </p>\n            </ng-container>\n        </div>\n        <div class=\"form-group text-left\">\n\n            <input placeholder=\"Password\" formControlName=\"password\" type=\"password\" class=\"form-control\">\n            <ng-container *ngIf=\"getPassword.touched\">\n                <p class=\"text-danger my-2\">\n                    <ng-container *ngIf=\"getPassword.errors?.required\">password is requred</ng-container>\n                    <ng-container *ngIf=\"getPassword.errors?.minlength\">min length is 6</ng-container>\n                </p>\n            </ng-container>\n        </div>\n        <div class=\"d-md-flex justify-content-center align-items-center\">\n         \n            <button [disabled]=\"createAccoutForm.invalid\" type=\"submit\" class=\"mr-md-4 mb-2 p-2 rounded\">Sign\n                up</button>\n            <p class=\"m-0\">Already a member? <a routerLink=\"../login\"> Sign In</a></p>\n        </div>\n        <div *ngIf=\"loading\"> \n            <div class=\"lds-ring\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n        <p *ngIf=\"createAccountError\" class=\"my-2 alert alert-danger\">\n            {{createAccountError}}\n        </p>\n    </form>\n   </div>\n    </div>\n\n\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { User } from 'src/app/interfaces/user';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit , OnDestroy {\n  loginForm:FormGroup|any\n  loginError:string|any=\"\"\n  loading:any=false\n  signinSub:Subscription|any\n  constructor(private authservice:AuthService,private fb:FormBuilder,private router:Router,\n    private title:Title) { \n      title.setTitle('Sign In')\n    this.loginForm = this.fb.group({\n      email:['',Validators.required],\n      password:['',Validators.required]\n    })\n  }\n  get getEmail() {\n    return this.loginForm.get('email')\n  }\n  get getPassword() {\n    return this.loginForm.get('password')\n  }\n\n  ngOnInit(): void {\n  }\nlogin(value:User) {\n  this.loading=true\n  this.signinSub =  this.authservice.login(value).subscribe((res:any) => {\n    \nthis.loading=false\n     this.loginError=\"\"\n     localStorage.setItem('goodreadsToken',res.token)\n     this.router.navigate(['profile/myBooks'])\n   } , err => {\n     this.loading=false\n     this.loginError=err.error.error || err.error.errors\n   })\n}\nngOnDestroy() {\n if(this.signinSub) {\n  this.signinSub.unsubscribe()\n }\n}\n}\n","<div class=\"login d-flex justify-content-center align-items-center mb-5\" style=\"color: black !important;\">\n         <div class=\"widthh my-5 bg-white p-3 text-center\" style=\"border-radius:15px;\">\n            <img src=\"assets/signin.PNG\" alt=\"\" class=\"imgWidth\">\n           <div class=\"borderAround\">\n            <h3>Sign in to Goodreads</h3>\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"login(loginForm.value)\">\n     \n                <div class=\"form-group text-left\">\n                   <input placeholder=\"Email\" formControlName=\"email\" type=\"email\" class=\"form-control\">\n                   <ng-container *ngIf=\"getEmail.touched\">\n                     <p class=\"text-danger my-2\" >\n                         <ng-container *ngIf=\"getEmail.errors?.required\">Email is requred</ng-container>\n                    </p> \n                    </ng-container>\n               </div>\n               <div class=\"form-group text-left\">\n                   <input placeholder=\"Password\" formControlName=\"password\" type=\"password\" class=\"form-control\">\n                   <ng-container *ngIf=\"getPassword.touched\">\n                     <p class=\"text-danger my-2\" >\n                         <ng-container *ngIf=\"getPassword.errors?.required\">password is requred</ng-container>\n                    </p> \n                    </ng-container>\n               </div>\n               <div class=\"d-md-flex justify-content-center align-items-center\">\n                   <button [disabled]=\"loginForm.invalid\" type=\"submit\" class=\"mr-md-4 mb-2 p-2 rounded\">Sign In</button>\n                   <p  class=\"m-0\">Not a member? <a routerLink=\"../signup\">  Sign Up</a></p>\n               </div>\n               <div *ngIf=\"loading\"> \n                   <div class=\"lds-ring\">\n                       <div></div>\n                       <div></div>\n                       <div></div>\n                       <div></div>\n                   </div>\n               </div>\n               <p *ngIf=\"loginError\" class=\"my-2 alert alert-danger\">\n                   {{loginError}}\n               </p>\n            </form>\n           </div>\n        </div>\n   \n    \n  </div>"],"sourceRoot":"webpack:///"}